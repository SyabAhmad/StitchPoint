"""empty message

Revision ID: 61b021725a14
Revises: 9b934d44be68
Create Date: 2025-10-19 14:01:42.699339

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '61b021725a14'
down_revision = '9b934d44be68'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seller_stats',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('seller_id', sa.String(length=36), nullable=False),
    sa.Column('total_revenue', sa.Float(), nullable=True),
    sa.Column('monthly_revenue', sa.Float(), nullable=True),
    sa.Column('total_payout', sa.Float(), nullable=True),
    sa.Column('pending_payout', sa.Float(), nullable=True),
    sa.Column('total_commission', sa.Float(), nullable=True),
    sa.Column('total_orders', sa.Integer(), nullable=True),
    sa.Column('completed_orders', sa.Integer(), nullable=True),
    sa.Column('cancelled_orders', sa.Integer(), nullable=True),
    sa.Column('returned_orders', sa.Integer(), nullable=True),
    sa.Column('total_products', sa.Integer(), nullable=True),
    sa.Column('active_products', sa.Integer(), nullable=True),
    sa.Column('total_items_sold', sa.Integer(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.Column('response_time_hours', sa.Float(), nullable=True),
    sa.Column('cancellation_rate', sa.Float(), nullable=True),
    sa.Column('return_rate', sa.Float(), nullable=True),
    sa.Column('positive_feedback_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_sale_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('seller_stats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_seller_stats_seller_id'), ['seller_id'], unique=True)

    op.create_table('inventory_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('product_id', sa.String(length=36), nullable=False),
    sa.Column('quantity_change', sa.Integer(), nullable=False),
    sa.Column('previous_stock', sa.Integer(), nullable=True),
    sa.Column('new_stock', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('reference_id', sa.String(length=36), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inventory_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_logs_product_id'), ['product_id'], unique=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payment_status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('payment_method', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('refund_amount', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('commission_fee', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('seller_payout', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('rating_by_customer', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('customer_review', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('seller_id', sa.String(length=36), nullable=True))
        batch_op.create_index(batch_op.f('ix_orders_seller_id'), ['seller_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['seller_id'], ['id'])

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_sold', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('monthly_revenue', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('last_sale_date', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_column('last_sale_date')
        batch_op.drop_column('monthly_revenue')
        batch_op.drop_column('total_sold')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_orders_seller_id'))
        batch_op.drop_column('seller_id')
        batch_op.drop_column('customer_review')
        batch_op.drop_column('rating_by_customer')
        batch_op.drop_column('seller_payout')
        batch_op.drop_column('commission_fee')
        batch_op.drop_column('refund_amount')
        batch_op.drop_column('payment_method')
        batch_op.drop_column('payment_status')

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_logs_product_id'))
        batch_op.drop_index(batch_op.f('ix_inventory_logs_created_at'))

    op.drop_table('inventory_logs')
    with op.batch_alter_table('seller_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_seller_stats_seller_id'))

    op.drop_table('seller_stats')
    # ### end Alembic commands ###
